# 스프링 빈과 의존관계

스프링은 스프링 컨테이너에 스프링 빈을 등록할 때, 기본으로 싱글톤으로 등록한다(유일하게 하나만 등록해서 공유한다)
따라서 같은 스프링 빈이면 모두 같은 인스턴스다. 설정으로 싱글톤이 아니게 설정할 수 있지만, 특별한 경우를 제외하면
대부분 싱글톤을 사용한다.

## 스프링 빈 등록 방법

1. 컴포넌트 스캔과 자동 의존관계 설정
2. 자바 코드로 직접 스프링 빈 등록

### 컴포넌트 스캔과 자동 의존관계 설정
#### 컴포넌트 스캔

- `@Component`애노테이션이 있으면 스프링 빈으로 자동 등록된다.
- `@Controller`컨트롤러가 스프링 빈으로 자동 등록된 이유도 컴포넌트 스캔 때문이다.
    - `@Component`를 포함하는 다음 애노테이션도 스프링 빈으로 자동 등록된다.
        - `@Controller`
        - `@Service`
        - `@Repository`
  

#### 자동 의존관계 설정
생성자에 `@Autowired`를 사용하면 객체 생성 시점에 스프링 컨테이너에서 해당 스프링 빈을 찾아서 주입한다.

`의존성 주입(DI : Dependency Injection)이란 객체 의존 관계를 외부에서 넣어주는 것이다.`


### 자바 코드로 직접 스프링 빈 등록  : `@Configuration` 으로 관리
Service, Repository 의 `@Servicer`,`@Repository`,`@Autowired`를 제거한다.

[Controller 를 제거하지 않는 이유]

각 객체는 비즈니스 요구사항에 의해 계속 변하기 때문에 의존성을 주입하여 객체간의 
결합도를 낮춰야한다. 즉, 의존성을 주입해야하는 객체는 대체로 변화할 여지가 있는 객체라고 말할 수 있다.

Controller 는 사용자의 URL을 특정 서비스에 전달하는 매퍼의 역할을 할 뿐 비즈니스 로직을 가지고 있지 않아 
비즈니스 요구사항이 변한다고 해서 Controller 를 수정하거나 다른 것으로 교체하는 경우가 없기 때문에 Controller
를 Config 로 관리하지 않는다.